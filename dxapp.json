{
  "name": "eggd_MultiQC",
  "title": "eggd_MultiQC",
  "summary": "MultiQC -  Generates a run-wide visualisation of QC reports",
  "dxapi": "1.0.0",
  "version":"2.0.0",
  "openSource": true,
  "properties": {
    "githubRelease": "v2.0.0"
  },
  "inputSpec": [
    {
      "name": "multiqc_docker",
      "label": "Docker image tar.gz of the MultiQC tool",
      "optional": false,
      "class": "file",
      "patterns": [ "*.tar", "*.tar.gz"],
      "default": {
        "$dnanexus_link": "file-G61JxF84g59YVK4G43FzGzGp"
      },
      "suggestions": [
        {
          "project": "project-FpG6k2Q4g59bZJ0z15XzByFY",
          "path": "/"
        }
      ]
    },
    {
      "name": "multiqc_config_file",
      "label": "MultiQC config file",
      "help": "must have 'sp' and 'dx_sp' keys that specify all modules and relevant file extensions to be displayed in the report",
      "optional": false,
      "class": "file",
      "patterns": ["*.yaml"]
    },
    {
      "name": "single_folder",
      "label": "Run MultiQC on a single data folder?",
      "help": "only and all files in the project:/path/to/folder/* will be downloaded and passed to MultiQC, will break if the folder has further subfolders",
      "optional": true,
      "class": "boolean",
      "default": false
    },
    {
      "name": "project_for_multiqc",
      "label": "Project name",
      "help": "eg '002_200306_K00178_0254_AHGGF7BBX",
      "optional": false,
      "class": "string"
    },
    {
      "name": "primary_workflow_output",
      "label": "Primary workflow output directory name OR path to a specific folder in the project",
      "help": "Name of the directory that holds the QC data: single_sample/main workflow OR absolute path to a single folder. Examples: 'dias_single_v#-TWE_v#-YYMMDD-1' or 'uranus_YYMMDD_1' or '/foo/bar/all_QC_files/'",
      "optional": false,
      "class": "string"
    },
    {
      "name": "secondary_workflow_output",
      "label": "Secondary workflow output directory OPTIONAL",
      "help": "eg 'dias_multi_v#-TWE_v#-YYMMDD-1'",
      "optional": true,
      "class": "string"
    },
    {
      "name": "calc_custom_coverage",
      "label": "Calculate coverage at custom depths?",
      "help": "otherwise restricted to %coverage at 1, 2, 10, 20, 30, 40, 50 and 100x",
      "optional": true,
      "class": "boolean",
      "default": false
    },
    {
      "name": "depths",
      "label": "At what depths should target bases coverage be calculated?",
      "help": "Provide a list of comma separated integer values eg 250,500,1000",
      "optional": true,
      "class": "string",
      "default": "250,500,1000"
    }
  ],
  "outputSpec": [
    {
      "name": "multiqc_html_report",
      "class": "file",
      "label": "MultiQC html report",
      "help": "An html file containing the report as generated by MultiQC."
    },
    {
      "name": "multiqc_data_files",
      "class": "array:file",
      "label": "MultiQC data files",
      "help": "A folder of text files containing QC metrics parsed by MultiQC."
    }
  ],
  "runSpec": {
    "timeoutPolicy": {
      "*": {
        "hours": 2
      }
    },
    "version": "0",
    "interpreter": "bash",
    "release": "20.04",
    "distribution": "Ubuntu",
    "file": "src/multiqc.sh"
  },
  "developers":[
    "user-sophier",
    "org-emee_1"
  ],
  "authorizedUsers": [
    "org-emee_1"
  ],
  "access": {
    "allProjects":"VIEW",
    "network": [
      "*"
    ]
  },
  "regionalOptions": {
    "aws:eu-central-1": {
      "systemRequirements": {
        "*": {
          "instanceType": "mem1_ssd1_v2_x4"
        }
      }
    }
  }
}
